% Licensed under the Apache License, Version 2.0 (the "License"); you may not
% use this file except in compliance with the License. You may obtain a copy of
% the License at
%
%   http://www.apache.org/licenses/LICENSE-2.0
%
% Unless required by applicable law or agreed to in writing, software
% distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
% WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
% License for the specific language governing permissions and limitations under
% the License.

% Set the path to the configuration environment generated
% by `./configure`.

COUCHDB_ROOT = filename:dirname(SCRIPT).
os:putenv("COUCHDB_ROOT", COUCHDB_ROOT).

ConfigureEnv = filename:join(COUCHDB_ROOT, "config.erl").
os:putenv("COUCHDB_CONFIG", ConfigureEnv).

os:putenv("COUCHDB_APPS_CONFIG_DIR", filename:join([COUCHDB_ROOT, "rel/apps"])).

DepDescs = [
%% must be compiled first as it has a custom behavior
{couch_epi,        "couch-epi",        "c359a6900c193211a77004df9a31c2ad4bcddf9d"},
%% keep these sorted
{b64url,           "b64url",           "319fc604235ab1fde37047b38a432450161db750"},
{cassim,           "cassim",           "60392-privatize-db-record"},
{couch_log,        "couch-log",        "60392-privatize-db-record"},
{couch_log_lager,  "couch-log-lager",  "b2a0471a87765de50c5eb05c65c121f68a9ae9fa"},
{config,           "config",           "b2ecd0d47a776256956ce045123423494ff85e8e"},
{chttpd,           "chttpd",           "60392-privatize-db-record"},
{couch,            "couch",            "60392-privatize-db-record"},
{couch_index,      "couch-index",      "60392-privatize-db-record"},
{couch_mrview,     "couch-mrview",     "60392-privatize-db-record"},
{couch_replicator, "couch-replicator", "60392-privatize-db-record"},
{couch_plugins,    "couch-plugins",    "3e73b723cb126cfc471b560d17c24a8b5c540085"},
{couch_event,      "couch-event",      "835a41885d1e276d207758954f8238aa7bba0ae8"},
{couch_stats,      "couch-stats",      "7895d4d3f509ed24f09b6d1a0bd0e06af34551dc"},
{couch_peruser,    "peruser",          "ff7d190970a46722137fbc7a1a75466e8a544ae1"},
{docs,             "documentation",    "8f9f149925e3d42bebd7ffa944982c0c9af4c675", [raw]},
{ddoc_cache,       "ddoc-cache",       "c762e90a33ce3cda19ef142dd1120f1087ecd876"},
{ets_lru,          "ets-lru",          "c05488c8b1d7ec1c3554a828e0c9bf2888932ed6"},
{fabric,           "fabric",           "60392-privatize-db-record"},
{fauxton,          "fauxton",          "ebd9ced89d27de297526acf74ebad88f1c6a6711", [raw]},
{folsom,           "folsom",           "60392-privatize-db-record"},
{global_changes,   "global-changes",   "e55de37ece29b6cbc0af540370d2425159338bf9"},
{goldrush,         "goldrush",         {tag, "0.1.6"}},
{ibrowse,          "ibrowse",          "4af2d408607874d124414ac45df1edbe3961d1cd"},
{ioq,              "ioq",              "c7c75ebeaf41599e3a3e211097d864f0e7785829"},
{jiffy,            "jiffy",            "ea19c417f9fd52fa3f7ef2d378735e5532c59b29"},
{khash,            "khash",            "7c6a9cd9776b5c6f063ccafedfa984b00877b019"},
{mango,            "mango",            "60392-privatize-db-record"},
{mem3,             "mem3",             "60392-privatize-db-record"},
{mochiweb,         "mochiweb",         "bd6ae7cbb371666a1f68115056f7b30d13765782"},
{oauth,            "oauth",            "099057a98e41f3aff91e77e3cf496d6c6fd901df"},
{rexi,             "rexi",             "a327b7dbeb2b0050f7ca9072047bf8ef2d282833"},
{snappy,           "snappy",           "0ab2796f82789895a2a86d403e63f3823d3c5a1d"},
{setup,            "setup",            "b9e1f3b5d5a78a706abb358e17130fb7344567d2"},
{meck,             "meck",             {tag, "0.8.2"}},
{nifile,           "nifile",           "master"},
{couch_ngen,       "couch_ngen",       "master"},
{eleveldb,         "eleveldb",         "cloudant-develop"},
{couch_ldb_engine, "couch_ldb_engine", "master"}
],

BaseUrl = "https://github.com/cloudant/",

MakeDep = fun
    ({AppName, {url, Url}, Version}) ->
        {AppName, ".*", {git, Url, Version}};
    ({AppName, {url, Url}, Version, Options}) ->
        {AppName, ".*", {git, Url, Version}, Options};
    ({AppName, RepoName, Version}) when
            AppName == couch_ngen;
            AppName == nifile;
            AppName == eleveldb;
            AppName == couch_ldb_engine ->
        Url = BaseUrl ++ RepoName ++ ".git",
        {AppName, ".*", {git, Url, Version}};
    ({AppName, RepoName, Version}) ->
        Url = BaseUrl ++ "couchdb-" ++ RepoName ++ ".git",
        {AppName, ".*", {git, Url, Version}};
    ({AppName, RepoName, Version, Options}) ->
        Url = BaseUrl ++ "couchdb-" ++ RepoName ++ ".git",
        {AppName, ".*", {git, Url, Version}, Options}
end,

AddConfig = [
    {require_otp_vsn, "R16B03-1|17|18"},
    {deps_dir, "src"},
    {deps, lists:map(MakeDep, DepDescs)},
    {sub_dirs, ["rel"]},
    {lib_dirs, ["src/"]},
    {erl_opts, [debug_info]},
    {eunit_opts, [verbose]},
    {plugins, [eunit_plugin]},
    {dialyzer, [
        {plt_location, local},
        {plt_location, COUCHDB_ROOT},
        {plt_extra_apps, [
            asn1, compiler, crypto, inets, kernel, os_mon, runtime_tools,
            sasl, ssl, stdlib, syntax_tools, xmerl]},
        {warnings, [unmatched_returns, error_handling, race_conditions]}]},
    {post_hooks, [{compile, "escript support/build_js.escript"}]}
],

C = lists:foldl(fun({K, V}, CfgAcc) ->
    lists:keystore(K, 1, CfgAcc, {K, V})
end, CONFIG, AddConfig).
